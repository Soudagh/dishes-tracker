{
	"info": {
		"_postman_id": "5a71cd23-fa08-4cbb-8522-bf744eb81b32",
		"name": "calories",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24527045",
		"_collection_link": "https://www.postman.com/technical-astronaut-29925197/workspace/my-workspace/collection/24527045-5a71cd23-fa08-4cbb-8522-bf744eb81b32?action=share&source=collection_link&creator=24527045"
	},
	"item": [
		{
			"name": "reports",
			"item": [
				{
					"name": "dailySummaryOfUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/reports/summary/1/2025-04-03",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reports",
								"summary",
								"1",
								"2025-04-03"
							]
						}
					},
					"response": []
				},
				{
					"name": "is daily norm",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/reports/1/2025-04-03",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reports",
								"1",
								"2025-04-03"
							]
						}
					},
					"response": []
				},
				{
					"name": "user's meal report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/reports/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reports",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "dishes",
			"item": [
				{
					"name": "get dish by id Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/users/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create dish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"title\": \"Овсянка с бананом\",\n  \"calories\": 350.0,\n  \"proteins\": 10.0,\n  \"fats\": 5.0,\n  \"carbohydrates\": 60\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/dishes",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "meals",
			"item": [
				{
					"name": "create meal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2025-04-03\",\n  \"user\": 1,\n  \"dishes\": [1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/meals",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"meals"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get meal",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/users/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"name\": \"Иван Иванов\",\n  \"email\": \"ivan@example.com\",\n  \"age\": 25,\n  \"height\": 180,\n  \"weight\": 75,\n  \"goal\": \"WEIGHT_MAINTAINING\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}